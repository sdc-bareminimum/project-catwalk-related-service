name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  CI: true
  DATABASE_URL: postgres://postgres:postgres@0.0.0.0:5432/postgress

jobs:

  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: [ '12', '14', '16' ]
        os: [ubuntu-latest]
        # database-name:
        # - postgres
        # database-password:
        # - postgres
        # database-user:
        # - postgres
        # database-host:
        # - 127.0.0.1
        # database-port:
        # - 5432

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: example
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    steps:
    - name: ‚ôªÔ∏è Check out Git Repository
      uses: actions/checkout@v2

    # - name: üêò Configure Postgres
    #   uses: ./Docker/
    #   with:
    #     postgresql password: example
    #     postgresql init scripts: ../config

    - name: üîñ  Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: ‚¨áÔ∏è  Install npm dependencies
      run: npm install

    - name: ‚úÖ  Run tests
      # env:
      #   POSTGRES_USER: ${{ matrix.database-user }}
      #   POSTGRES_PASSWORD: ${{ matrix.database-password }}
      #   DATABASE_HOST: ${{ matrix.database-host }}
      #   DATABASE_PORT: ${{ matrix.database-port }}
      #   POSTGRES_DB: ${{ matrix.database-name }}
      run: npm run test
